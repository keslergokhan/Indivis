@using Indivis.Core.Application.Dtos.CoreEntityDtos.Widgets.Reads
@using Indivis.Presentation.WebUICms.Models.InternalApiModels.WidgetFormModels
@using Indivis.Presentation.WebUICms.Models.ViewComponents
@using Indivis.Presentation.WebUICms.Models.ViewComponents.WidgetFormInputs
@model WidgetFormApiGetDynamicUpdateFormResModel
@{
    Layout = null;
}

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
</head>
        <!link rel="stylesheet" href="/lib/bootstrap/css/bootstrap.min.css" />
        <!link rel="stylesheet" href="/lib/bootstrap/font/bootstrap-icons.min.css" />
<body>
    <div class="container">
        <!form class="js-widget-form-settings" data-page-widget-id="@Model.PageWidget.Id" data-page-widget-setting-id="@Model.PageWidget.PageWidgetSettingId" >
        <div class="card">

            <div class="card-header">
                <h6 class="card-title">Tasarım Ayarlar</h6>
            </div>

            <div class="card-body">
                <div class="mb-2 row">

                    <div class="col-4">
                        <label for="Name" class="form-label">
                            Tasarım Adı
                            <i class="bi bi-question-circle" data-bs-toggle="tooltip" title="Tasarım adı son kullanıcıya gözükmeyen admin taraflı bir içeriktir."></i>
                        </label>
                        <input required type="text" class="form-control form-control-sm" name="Name" id="Name" value="@Model.PageWidget.PageWidgetSetting.Name" aria-describedby="emailHelp">
                    </div>

                    <div class="col-4">
                        <label for="Grid" class="form-label">
                            Tasarım Genişliği
                            <i class="bi bi-question-circle" data-bs-toggle="tooltip" title="Tasarımın web sayfasında ekranın kapladığı alanı ayarlar"></i>
                        </label>
                        <select required name="Grid" id="Grid" class="form-select form-select-sm" aria-label=".form-select-sm example">
                            <!option value="12" @(Model.PageWidget.PageWidgetSetting.Grid == "12" ? "selected":"")>Ekranın 12/12 genişliği</!option>
                            <!option value="6" @(Model.PageWidget.PageWidgetSetting.Grid == "6" ? "selected":"")>Ekranın 12/6 genişliği</!option>
                            <!option value="4" @(Model.PageWidget.PageWidgetSetting.Grid == "4" ? "selected" : "")>Ekranın 12/4 genişliği</!option>
                        </select>
                    </div>

                    <div class="col-4">
                        <label for="IsShow" class="form-label">
                            Durum
                            <i class="bi bi-question-circle" data-bs-toggle="tooltip" title="Gizli, durumunda olan tasarımlar son kullanıcıya gösterilmez."></i>
                        </label>
                        <select required class="form-select form-select-sm" name="IsShow" id="IsShow" aria-label=".form-select-sm example">
                            <!option @(Model.PageWidget.PageWidgetSetting.IsShow == true ? "selected" : "") value="1">Göster</!option>
                            <!option @(Model.PageWidget.PageWidgetSetting.IsShow == false ? "selected" : "") value="0">Gizle</!option>
                        </select>
                    </div>

                </div>

            </div>
        </div>
        </!form>

        <!form class="js-widget-form-data">
        <div class="card mt-3">
            <div class="card-header">
                <h5>Tasarım Bilgileri</h5>
            </div>

            <div class="card-body">
                    @foreach (ReadWidgetFormDto form in Model.WidgetForms)
                    {
                        <h6 class="card-title"> @form.Name </h6>
                        <hr />
                        foreach (ReadWidgetForm_WidgetFormInputDto input in form.WidgetForm_WidgetFormInputs)
                        {
                            @await Component.InvokeAsync(input.WidgetFormInput.InputComponentName, new WidgetInputComponentReqModel()
                            {
                                Input = input.WidgetFormInput,
                                PageWidget = Model.PageWidget
                            })
                        }
                    }
            </div>
        </div>
        </!form>
    </div>



    <!script src="/lib/bootstrap/js/bootstrap.bundle.min.js"></!script>
    <script>
        // Tooltip etkinleştirme
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        })
    </script>
</body>
</html>